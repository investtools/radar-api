/**
 * Autogenerated by Thrift Compiler (0.12.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package br.com.investtools.radar.api;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
public class FetchedPortfolio implements org.apache.thrift.TBase<FetchedPortfolio, FetchedPortfolio._Fields>, java.io.Serializable, Cloneable, Comparable<FetchedPortfolio> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("FetchedPortfolio");

  private static final org.apache.thrift.protocol.TField DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("date", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField PORTFOLIO_FIELD_DESC = new org.apache.thrift.protocol.TField("portfolio", org.apache.thrift.protocol.TType.MAP, (short)2);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new FetchedPortfolioStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new FetchedPortfolioTupleSchemeFactory();

  public long date; // required
  public @org.apache.thrift.annotation.Nullable java.util.Map<br.com.investtools.radar.api.SecurityId,java.lang.Integer> portfolio; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    DATE((short)1, "date"),
    PORTFOLIO((short)2, "portfolio");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // DATE
          return DATE;
        case 2: // PORTFOLIO
          return PORTFOLIO;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __DATE_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.DATE, new org.apache.thrift.meta_data.FieldMetaData("date", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "Date")));
    tmpMap.put(_Fields.PORTFOLIO, new org.apache.thrift.meta_data.FieldMetaData("portfolio", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, br.com.investtools.radar.api.SecurityId.class), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(FetchedPortfolio.class, metaDataMap);
  }

  public FetchedPortfolio() {
  }

  public FetchedPortfolio(
    long date,
    java.util.Map<br.com.investtools.radar.api.SecurityId,java.lang.Integer> portfolio)
  {
    this();
    this.date = date;
    setDateIsSet(true);
    this.portfolio = portfolio;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public FetchedPortfolio(FetchedPortfolio other) {
    __isset_bitfield = other.__isset_bitfield;
    this.date = other.date;
    if (other.isSetPortfolio()) {
      java.util.Map<br.com.investtools.radar.api.SecurityId,java.lang.Integer> __this__portfolio = new java.util.HashMap<br.com.investtools.radar.api.SecurityId,java.lang.Integer>(other.portfolio.size());
      for (java.util.Map.Entry<br.com.investtools.radar.api.SecurityId, java.lang.Integer> other_element : other.portfolio.entrySet()) {

        br.com.investtools.radar.api.SecurityId other_element_key = other_element.getKey();
        java.lang.Integer other_element_value = other_element.getValue();

        br.com.investtools.radar.api.SecurityId __this__portfolio_copy_key = new br.com.investtools.radar.api.SecurityId(other_element_key);

        java.lang.Integer __this__portfolio_copy_value = other_element_value;

        __this__portfolio.put(__this__portfolio_copy_key, __this__portfolio_copy_value);
      }
      this.portfolio = __this__portfolio;
    }
  }

  public FetchedPortfolio deepCopy() {
    return new FetchedPortfolio(this);
  }

  @Override
  public void clear() {
    setDateIsSet(false);
    this.date = 0;
    this.portfolio = null;
  }

  public long getDate() {
    return this.date;
  }

  public FetchedPortfolio setDate(long date) {
    this.date = date;
    setDateIsSet(true);
    return this;
  }

  public void unsetDate() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DATE_ISSET_ID);
  }

  /** Returns true if field date is set (has been assigned a value) and false otherwise */
  public boolean isSetDate() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DATE_ISSET_ID);
  }

  public void setDateIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DATE_ISSET_ID, value);
  }

  public int getPortfolioSize() {
    return (this.portfolio == null) ? 0 : this.portfolio.size();
  }

  public void putToPortfolio(br.com.investtools.radar.api.SecurityId key, int val) {
    if (this.portfolio == null) {
      this.portfolio = new java.util.HashMap<br.com.investtools.radar.api.SecurityId,java.lang.Integer>();
    }
    this.portfolio.put(key, val);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Map<br.com.investtools.radar.api.SecurityId,java.lang.Integer> getPortfolio() {
    return this.portfolio;
  }

  public FetchedPortfolio setPortfolio(@org.apache.thrift.annotation.Nullable java.util.Map<br.com.investtools.radar.api.SecurityId,java.lang.Integer> portfolio) {
    this.portfolio = portfolio;
    return this;
  }

  public void unsetPortfolio() {
    this.portfolio = null;
  }

  /** Returns true if field portfolio is set (has been assigned a value) and false otherwise */
  public boolean isSetPortfolio() {
    return this.portfolio != null;
  }

  public void setPortfolioIsSet(boolean value) {
    if (!value) {
      this.portfolio = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case DATE:
      if (value == null) {
        unsetDate();
      } else {
        setDate((java.lang.Long)value);
      }
      break;

    case PORTFOLIO:
      if (value == null) {
        unsetPortfolio();
      } else {
        setPortfolio((java.util.Map<br.com.investtools.radar.api.SecurityId,java.lang.Integer>)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case DATE:
      return getDate();

    case PORTFOLIO:
      return getPortfolio();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case DATE:
      return isSetDate();
    case PORTFOLIO:
      return isSetPortfolio();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof FetchedPortfolio)
      return this.equals((FetchedPortfolio)that);
    return false;
  }

  public boolean equals(FetchedPortfolio that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_date = true;
    boolean that_present_date = true;
    if (this_present_date || that_present_date) {
      if (!(this_present_date && that_present_date))
        return false;
      if (this.date != that.date)
        return false;
    }

    boolean this_present_portfolio = true && this.isSetPortfolio();
    boolean that_present_portfolio = true && that.isSetPortfolio();
    if (this_present_portfolio || that_present_portfolio) {
      if (!(this_present_portfolio && that_present_portfolio))
        return false;
      if (!this.portfolio.equals(that.portfolio))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(date);

    hashCode = hashCode * 8191 + ((isSetPortfolio()) ? 131071 : 524287);
    if (isSetPortfolio())
      hashCode = hashCode * 8191 + portfolio.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(FetchedPortfolio other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetDate()).compareTo(other.isSetDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.date, other.date);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPortfolio()).compareTo(other.isSetPortfolio());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPortfolio()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.portfolio, other.portfolio);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("FetchedPortfolio(");
    boolean first = true;

    sb.append("date:");
    sb.append(this.date);
    first = false;
    if (!first) sb.append(", ");
    sb.append("portfolio:");
    if (this.portfolio == null) {
      sb.append("null");
    } else {
      sb.append(this.portfolio);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class FetchedPortfolioStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public FetchedPortfolioStandardScheme getScheme() {
      return new FetchedPortfolioStandardScheme();
    }
  }

  private static class FetchedPortfolioStandardScheme extends org.apache.thrift.scheme.StandardScheme<FetchedPortfolio> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, FetchedPortfolio struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.date = iprot.readI64();
              struct.setDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PORTFOLIO
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map0 = iprot.readMapBegin();
                struct.portfolio = new java.util.HashMap<br.com.investtools.radar.api.SecurityId,java.lang.Integer>(2*_map0.size);
                @org.apache.thrift.annotation.Nullable br.com.investtools.radar.api.SecurityId _key1;
                int _val2;
                for (int _i3 = 0; _i3 < _map0.size; ++_i3)
                {
                  _key1 = new br.com.investtools.radar.api.SecurityId();
                  _key1.read(iprot);
                  _val2 = iprot.readI32();
                  struct.portfolio.put(_key1, _val2);
                }
                iprot.readMapEnd();
              }
              struct.setPortfolioIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, FetchedPortfolio struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(DATE_FIELD_DESC);
      oprot.writeI64(struct.date);
      oprot.writeFieldEnd();
      if (struct.portfolio != null) {
        oprot.writeFieldBegin(PORTFOLIO_FIELD_DESC);
        {
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRUCT, org.apache.thrift.protocol.TType.I32, struct.portfolio.size()));
          for (java.util.Map.Entry<br.com.investtools.radar.api.SecurityId, java.lang.Integer> _iter4 : struct.portfolio.entrySet())
          {
            _iter4.getKey().write(oprot);
            oprot.writeI32(_iter4.getValue());
          }
          oprot.writeMapEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class FetchedPortfolioTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public FetchedPortfolioTupleScheme getScheme() {
      return new FetchedPortfolioTupleScheme();
    }
  }

  private static class FetchedPortfolioTupleScheme extends org.apache.thrift.scheme.TupleScheme<FetchedPortfolio> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, FetchedPortfolio struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetDate()) {
        optionals.set(0);
      }
      if (struct.isSetPortfolio()) {
        optionals.set(1);
      }
      oprot.writeBitSet(optionals, 2);
      if (struct.isSetDate()) {
        oprot.writeI64(struct.date);
      }
      if (struct.isSetPortfolio()) {
        {
          oprot.writeI32(struct.portfolio.size());
          for (java.util.Map.Entry<br.com.investtools.radar.api.SecurityId, java.lang.Integer> _iter5 : struct.portfolio.entrySet())
          {
            _iter5.getKey().write(oprot);
            oprot.writeI32(_iter5.getValue());
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, FetchedPortfolio struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(2);
      if (incoming.get(0)) {
        struct.date = iprot.readI64();
        struct.setDateIsSet(true);
      }
      if (incoming.get(1)) {
        {
          org.apache.thrift.protocol.TMap _map6 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRUCT, org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.portfolio = new java.util.HashMap<br.com.investtools.radar.api.SecurityId,java.lang.Integer>(2*_map6.size);
          @org.apache.thrift.annotation.Nullable br.com.investtools.radar.api.SecurityId _key7;
          int _val8;
          for (int _i9 = 0; _i9 < _map6.size; ++_i9)
          {
            _key7 = new br.com.investtools.radar.api.SecurityId();
            _key7.read(iprot);
            _val8 = iprot.readI32();
            struct.portfolio.put(_key7, _val8);
          }
        }
        struct.setPortfolioIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

