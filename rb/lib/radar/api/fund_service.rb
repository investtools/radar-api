#
# Autogenerated by Thrift Compiler (1.0.0-dev)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'radar_types'

module Radar
  module API
    module FundService
      class Client
        include ::Thrift::Client

        def name(id)
          send_name(id)
          return recv_name()
        end

        def send_name(id)
          send_message('name', Name_args, :id => id)
        end

        def recv_name()
          result = receive_message(Name_result)
          return result.success unless result.success.nil?
          raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'name failed: unknown result')
        end

      end

      class Processor
        include ::Thrift::Processor

        def process_name(seqid, iprot, oprot)
          args = read_args(iprot, Name_args)
          result = Name_result.new()
          result.success = @handler.name(args.id)
          write_result(result, oprot, 'name', seqid)
        end

      end

      # HELPER FUNCTIONS AND STRUCTURES

      class Name_args
        include ::Thrift::Struct, ::Thrift::Struct_Union
        ID = 1

        FIELDS = {
          ID => {:type => ::Thrift::Types::STRUCT, :name => 'id', :class => ::Radar::API::FundId}
        }

        def struct_fields; FIELDS; end

        def validate
        end

        ::Thrift::Struct.generate_accessors self
      end

      class Name_result
        include ::Thrift::Struct, ::Thrift::Struct_Union
        SUCCESS = 0

        FIELDS = {
          SUCCESS => {:type => ::Thrift::Types::STRING, :name => 'success'}
        }

        def struct_fields; FIELDS; end

        def validate
        end

        ::Thrift::Struct.generate_accessors self
      end

    end

  end
end
