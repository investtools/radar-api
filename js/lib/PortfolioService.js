//
// Autogenerated by Thrift Compiler (0.12.0)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
"use strict";

var thrift = require('thrift');
var Thrift = thrift.Thrift;
var Q = thrift.Q;

var common_ttypes = require('./common_types');
var transaction_ttypes = require('./transaction_types');


var ttypes = require('./data_server_types');
//HELPER FUNCTIONS AND STRUCTURES

var PortfolioService_run_portfolio_args = function(args) {
  this.trxs = null;
  this.reports_dates = null;
  this.user = null;
  if (args) {
    if (args.trxs !== undefined && args.trxs !== null) {
      this.trxs = Thrift.copyList(args.trxs, [transaction_ttypes.Transaction]);
    }
    if (args.reports_dates !== undefined && args.reports_dates !== null) {
      this.reports_dates = Thrift.copyList(args.reports_dates, [null]);
    }
    if (args.user !== undefined && args.user !== null) {
      this.user = args.user;
    }
  }
};
PortfolioService_run_portfolio_args.prototype = {};
PortfolioService_run_portfolio_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.LIST) {
        this.trxs = [];
        var _rtmp36 = input.readListBegin();
        var _size5 = _rtmp36.size || 0;
        for (var _i7 = 0; _i7 < _size5; ++_i7) {
          var elem8 = null;
          elem8 = new transaction_ttypes.Transaction();
          elem8.read(input);
          this.trxs.push(elem8);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        this.reports_dates = [];
        var _rtmp310 = input.readListBegin();
        var _size9 = _rtmp310.size || 0;
        for (var _i11 = 0; _i11 < _size9; ++_i11) {
          var elem12 = null;
          elem12 = input.readI64();
          this.reports_dates.push(elem12);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.user = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PortfolioService_run_portfolio_args.prototype.write = function(output) {
  output.writeStructBegin('PortfolioService_run_portfolio_args');
  if (this.trxs !== null && this.trxs !== undefined) {
    output.writeFieldBegin('trxs', Thrift.Type.LIST, 1);
    output.writeListBegin(Thrift.Type.STRUCT, this.trxs.length);
    for (var iter13 in this.trxs) {
      if (this.trxs.hasOwnProperty(iter13)) {
        iter13 = this.trxs[iter13];
        iter13.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.reports_dates !== null && this.reports_dates !== undefined) {
    output.writeFieldBegin('reports_dates', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.I64, this.reports_dates.length);
    for (var iter14 in this.reports_dates) {
      if (this.reports_dates.hasOwnProperty(iter14)) {
        iter14 = this.reports_dates[iter14];
        output.writeI64(iter14);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.user !== null && this.user !== undefined) {
    output.writeFieldBegin('user', Thrift.Type.STRING, 3);
    output.writeString(this.user);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PortfolioService_run_portfolio_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [ttypes.MonthlyPosition]);
    }
  }
};
PortfolioService_run_portfolio_result.prototype = {};
PortfolioService_run_portfolio_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        this.success = [];
        var _rtmp316 = input.readListBegin();
        var _size15 = _rtmp316.size || 0;
        for (var _i17 = 0; _i17 < _size15; ++_i17) {
          var elem18 = null;
          elem18 = new ttypes.MonthlyPosition();
          elem18.read(input);
          this.success.push(elem18);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PortfolioService_run_portfolio_result.prototype.write = function(output) {
  output.writeStructBegin('PortfolioService_run_portfolio_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter19 in this.success) {
      if (this.success.hasOwnProperty(iter19)) {
        iter19 = this.success[iter19];
        iter19.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PortfolioService_persist_args = function(args) {
  this.trxs = null;
  this.user = null;
  if (args) {
    if (args.trxs !== undefined && args.trxs !== null) {
      this.trxs = Thrift.copyList(args.trxs, [transaction_ttypes.Transaction]);
    }
    if (args.user !== undefined && args.user !== null) {
      this.user = args.user;
    }
  }
};
PortfolioService_persist_args.prototype = {};
PortfolioService_persist_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.LIST) {
        this.trxs = [];
        var _rtmp321 = input.readListBegin();
        var _size20 = _rtmp321.size || 0;
        for (var _i22 = 0; _i22 < _size20; ++_i22) {
          var elem23 = null;
          elem23 = new transaction_ttypes.Transaction();
          elem23.read(input);
          this.trxs.push(elem23);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.user = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PortfolioService_persist_args.prototype.write = function(output) {
  output.writeStructBegin('PortfolioService_persist_args');
  if (this.trxs !== null && this.trxs !== undefined) {
    output.writeFieldBegin('trxs', Thrift.Type.LIST, 1);
    output.writeListBegin(Thrift.Type.STRUCT, this.trxs.length);
    for (var iter24 in this.trxs) {
      if (this.trxs.hasOwnProperty(iter24)) {
        iter24 = this.trxs[iter24];
        iter24.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.user !== null && this.user !== undefined) {
    output.writeFieldBegin('user', Thrift.Type.STRING, 2);
    output.writeString(this.user);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PortfolioService_persist_result = function(args) {
};
PortfolioService_persist_result.prototype = {};
PortfolioService_persist_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PortfolioService_persist_result.prototype.write = function(output) {
  output.writeStructBegin('PortfolioService_persist_result');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PortfolioService_persist_brokers_args = function(args) {
  this.brokers = null;
  this.user = null;
  if (args) {
    if (args.brokers !== undefined && args.brokers !== null) {
      this.brokers = Thrift.copyList(args.brokers, [common_ttypes.Broker]);
    }
    if (args.user !== undefined && args.user !== null) {
      this.user = args.user;
    }
  }
};
PortfolioService_persist_brokers_args.prototype = {};
PortfolioService_persist_brokers_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.LIST) {
        this.brokers = [];
        var _rtmp326 = input.readListBegin();
        var _size25 = _rtmp326.size || 0;
        for (var _i27 = 0; _i27 < _size25; ++_i27) {
          var elem28 = null;
          elem28 = new common_ttypes.Broker();
          elem28.read(input);
          this.brokers.push(elem28);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.user = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PortfolioService_persist_brokers_args.prototype.write = function(output) {
  output.writeStructBegin('PortfolioService_persist_brokers_args');
  if (this.brokers !== null && this.brokers !== undefined) {
    output.writeFieldBegin('brokers', Thrift.Type.LIST, 1);
    output.writeListBegin(Thrift.Type.STRUCT, this.brokers.length);
    for (var iter29 in this.brokers) {
      if (this.brokers.hasOwnProperty(iter29)) {
        iter29 = this.brokers[iter29];
        iter29.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.user !== null && this.user !== undefined) {
    output.writeFieldBegin('user', Thrift.Type.STRING, 2);
    output.writeString(this.user);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PortfolioService_persist_brokers_result = function(args) {
};
PortfolioService_persist_brokers_result.prototype = {};
PortfolioService_persist_brokers_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PortfolioService_persist_brokers_result.prototype.write = function(output) {
  output.writeStructBegin('PortfolioService_persist_brokers_result');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PortfolioServiceClient = exports.Client = function(output, pClass) {
  this.output = output;
  this.pClass = pClass;
  this._seqid = 0;
  this._reqs = {};
};
PortfolioServiceClient.prototype = {};
PortfolioServiceClient.prototype.seqid = function() { return this._seqid; };
PortfolioServiceClient.prototype.new_seqid = function() { return this._seqid += 1; };

PortfolioServiceClient.prototype.run_portfolio = function(trxs, reports_dates, user, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_run_portfolio(trxs, reports_dates, user);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_run_portfolio(trxs, reports_dates, user);
  }
};

PortfolioServiceClient.prototype.send_run_portfolio = function(trxs, reports_dates, user) {
  var output = new this.pClass(this.output);
  var params = {
    trxs: trxs,
    reports_dates: reports_dates,
    user: user
  };
  var args = new PortfolioService_run_portfolio_args(params);
  try {
    output.writeMessageBegin('run_portfolio', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PortfolioServiceClient.prototype.recv_run_portfolio = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PortfolioService_run_portfolio_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('run_portfolio failed: unknown result');
};

PortfolioServiceClient.prototype.persist = function(trxs, user, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_persist(trxs, user);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_persist(trxs, user);
  }
};

PortfolioServiceClient.prototype.send_persist = function(trxs, user) {
  var output = new this.pClass(this.output);
  var params = {
    trxs: trxs,
    user: user
  };
  var args = new PortfolioService_persist_args(params);
  try {
    output.writeMessageBegin('persist', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PortfolioServiceClient.prototype.recv_persist = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PortfolioService_persist_result();
  result.read(input);
  input.readMessageEnd();

  callback(null);
};

PortfolioServiceClient.prototype.persist_brokers = function(brokers, user, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_persist_brokers(brokers, user);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_persist_brokers(brokers, user);
  }
};

PortfolioServiceClient.prototype.send_persist_brokers = function(brokers, user) {
  var output = new this.pClass(this.output);
  var params = {
    brokers: brokers,
    user: user
  };
  var args = new PortfolioService_persist_brokers_args(params);
  try {
    output.writeMessageBegin('persist_brokers', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

PortfolioServiceClient.prototype.recv_persist_brokers = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PortfolioService_persist_brokers_result();
  result.read(input);
  input.readMessageEnd();

  callback(null);
};
var PortfolioServiceProcessor = exports.Processor = function(handler) {
  this._handler = handler;
};
PortfolioServiceProcessor.prototype.process = function(input, output) {
  var r = input.readMessageBegin();
  if (this['process_' + r.fname]) {
    return this['process_' + r.fname].call(this, r.rseqid, input, output);
  } else {
    input.skip(Thrift.Type.STRUCT);
    input.readMessageEnd();
    var x = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN_METHOD, 'Unknown function ' + r.fname);
    output.writeMessageBegin(r.fname, Thrift.MessageType.EXCEPTION, r.rseqid);
    x.write(output);
    output.writeMessageEnd();
    output.flush();
  }
};
PortfolioServiceProcessor.prototype.process_run_portfolio = function(seqid, input, output) {
  var args = new PortfolioService_run_portfolio_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.run_portfolio.length === 3) {
    Q.fcall(this._handler.run_portfolio.bind(this._handler),
      args.trxs,
      args.reports_dates,
      args.user
    ).then(function(result) {
      var result_obj = new PortfolioService_run_portfolio_result({success: result});
      output.writeMessageBegin("run_portfolio", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
      output.writeMessageBegin("run_portfolio", Thrift.MessageType.EXCEPTION, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.run_portfolio(args.trxs, args.reports_dates, args.user, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined')) {
        result_obj = new PortfolioService_run_portfolio_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("run_portfolio", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("run_portfolio", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PortfolioServiceProcessor.prototype.process_persist = function(seqid, input, output) {
  var args = new PortfolioService_persist_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.persist.length === 2) {
    Q.fcall(this._handler.persist.bind(this._handler),
      args.trxs,
      args.user
    ).then(function(result) {
      var result_obj = new PortfolioService_persist_result({success: result});
      output.writeMessageBegin("persist", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
      output.writeMessageBegin("persist", Thrift.MessageType.EXCEPTION, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.persist(args.trxs, args.user, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined')) {
        result_obj = new PortfolioService_persist_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("persist", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("persist", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PortfolioServiceProcessor.prototype.process_persist_brokers = function(seqid, input, output) {
  var args = new PortfolioService_persist_brokers_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.persist_brokers.length === 2) {
    Q.fcall(this._handler.persist_brokers.bind(this._handler),
      args.brokers,
      args.user
    ).then(function(result) {
      var result_obj = new PortfolioService_persist_brokers_result({success: result});
      output.writeMessageBegin("persist_brokers", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
      output.writeMessageBegin("persist_brokers", Thrift.MessageType.EXCEPTION, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.persist_brokers(args.brokers, args.user, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined')) {
        result_obj = new PortfolioService_persist_brokers_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("persist_brokers", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("persist_brokers", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
