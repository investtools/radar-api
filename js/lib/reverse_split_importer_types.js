//
// Autogenerated by Thrift Compiler (0.10.0)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
"use strict";

var thrift = require('thrift');
var Thrift = thrift.Thrift;
var Q = thrift.Q;

var common_ttypes = require('./common_types');


var ttypes = module.exports = {};
var ReverseSplit = module.exports.ReverseSplit = function(args) {
  this.date = null;
  this.ratio = null;
  this.stock = null;
  if (args) {
    if (args.date !== undefined && args.date !== null) {
      this.date = args.date;
    }
    if (args.ratio !== undefined && args.ratio !== null) {
      this.ratio = args.ratio;
    }
    if (args.stock !== undefined && args.stock !== null) {
      this.stock = new common_ttypes.StockId(args.stock);
    }
  }
};
ReverseSplit.prototype = {};
ReverseSplit.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.date = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.DOUBLE) {
        this.ratio = input.readDouble();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.stock = new common_ttypes.StockId();
        this.stock.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ReverseSplit.prototype.write = function(output) {
  output.writeStructBegin('ReverseSplit');
  if (this.date !== null && this.date !== undefined) {
    output.writeFieldBegin('date', Thrift.Type.I64, 1);
    output.writeI64(this.date);
    output.writeFieldEnd();
  }
  if (this.ratio !== null && this.ratio !== undefined) {
    output.writeFieldBegin('ratio', Thrift.Type.DOUBLE, 2);
    output.writeDouble(this.ratio);
    output.writeFieldEnd();
  }
  if (this.stock !== null && this.stock !== undefined) {
    output.writeFieldBegin('stock', Thrift.Type.STRUCT, 3);
    this.stock.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

